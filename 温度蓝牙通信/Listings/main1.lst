C51 COMPILER V9.54   MAIN1                                                                 12/02/2021 15:12:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN1
OBJECT MODULE PLACED IN .\Objects\main1.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n1.lst) TABS(2) OBJECT(.\Objects\main1.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "DS18b20.h"
   3          #include "LCD1602.h"
   4           
   5          
   6          
   7          char RECEIVED_CMD;
   8          unsigned char flag = 0 ;        // 数据接收的标志位
   9          extern unsigned int tvalue;     //温度值
  10          extern unsigned char tflag;     //温度正负标志
  11          unsigned char disdata[7];       // 温度数据，使用8字节数组来存储
  12          unsigned char chg[3];
  13          unsigned int wrong = 30;
  14          
  15          
  16          void UART_Init(); // 初始化串口
  17          void UART_SendData(char dat); // 串口发送数据
  18          void UART_SendStr(char* str); // 串口发送字符串
  19          void ds1820disp();  // 温度显示
  20          void change();      //转化阈值为字符数组
  21          
  22          
  23          void main() 
  24          {
  25   1        unsigned int temperature , old ; // 保存温度数值
  26   1        int A=5000;
  27   1        
  28   1        UART_Init();  // 串口初始化
  29   1        LCD_Init();  // 显示屏 初始化
  30   1        LCD_ShowString(1,1,"Temperature");
  31   1        P1_4 = 0;
  32   1        temperature = ReadTemperature(); 
  33   1        old = temperature ; 
  34   1        ds1820disp(); // 转换温度
  35   1        LCD_ShowString(2,1,disdata);
  36   1        LCD_ShowNum(2,13,wrong,2);
  37   1        
  38   1        while(1)
  39   1        {
  40   2          temperature=ReadTemperature();  // 读取一次新的温度
  41   2          LCD_ShowNum(2,13,wrong,2);
  42   2          LCD_ShowChar(2,16,'C');
  43   2      
  44   2          if (temperature != old )    
  45   2          {  
  46   3            old = temperature;
  47   3            ds1820disp(); // 转化温度
  48   3            LCD_ShowString(2,1,disdata); // 显示温度
  49   3          }
  50   2          
  51   2          if(temperature > wrong * 10)
  52   2          {
  53   3              P1_4 = !P1_4; //发出报警声
  54   3              while(A--);
C51 COMPILER V9.54   MAIN1                                                                 12/02/2021 15:12:05 PAGE 2   

  55   3              A=5000;
  56   3              LCD_ShowChar(1,16,'W');
  57   3          }
  58   2          else
  59   2          {
  60   3            LCD_ShowChar(1,16,'N');
  61   3            P1_4 = 0;
  62   3          }
  63   2              
  64   2          
  65   2          if(flag) // 接收数据完毕一次，就会进入中断一次
  66   2          {
  67   3            flag = 0 ; // 将标志位还原，使得串口又可以重新接收数据
  68   3                
  69   3            if(RECEIVED_CMD == '0')
  70   3            {
  71   4              UART_SendStr(disdata);//向串口发送数据，发送的是当前温度
  72   4            }
  73   3            else if(RECEIVED_CMD == '3')
  74   3            {
  75   4              change();
  76   4              UART_SendStr(chg);    //发送阈值
  77   4            }
  78   3            else if(RECEIVED_CMD == '1')
  79   3            {
  80   4              wrong ++ ;//阈值加
  81   4            }
  82   3            else if(RECEIVED_CMD  == '2')
  83   3            {
  84   4              wrong -- ;//阈值减
  85   4            }     
  86   3            RECEIVED_CMD =' ';
  87   3          }
  88   2        }
  89   1      }
  90          
  91          //串口初始化
  92          void UART_Init()
  93          {
  94   1        SCON=0x50;
  95   1        PCON |= 0x80;
  96   1        TMOD &= 0x0F;   //设置定时器模式
  97   1        TMOD |= 0x20;   //设置定时器模式
  98   1        TL1 = 0xF3;   //设定定时初值
  99   1        TH1 = 0xF3;   //设定定时器重装值
 100   1        ET1 = 0;    //禁止定时器1中断
 101   1        TR1 = 1;    //启动定时器1
 102   1        EA=1;
 103   1        ES=1;
 104   1        //打开两个外部中断
 105   1        IT0 = 1;
 106   1        IT1 = 1;
 107   1        EX0 = 1;
 108   1        EX1 = 1;
 109   1        
 110   1      }
 111          
 112          
 113          void UART_Isr() interrupt 4 using 1
 114          {
 115   1        // 串口接收中断处理
 116   1        if(RI) 
C51 COMPILER V9.54   MAIN1                                                                 12/02/2021 15:12:05 PAGE 3   

 117   1        {
 118   2          RI = 0 ;                              // 清除中断标志位
 119   2          RECEIVED_CMD = SBUF ; // 保存串口接收的数据
 120   2          flag = 1 ;           // 接收结束，到循环中处理接收的数据
 121   2          }
 122   1      
 123   1        // 串口发送中断处理
 124   1        if(TI)
 125   1        {
 126   2          TI = 0 ;  // 清发送中断标志位
 127   2        }
 128   1          
 129   1      }
 130          
 131          //开关K1
 132          void int0() interrupt 0
 133          {
 134   1        wrong ++;
 135   1      }
 136          //开关K2
 137          void int1() interrupt 2
 138          {
 139   1        wrong --;
 140   1      }
 141          
 142          //通过串口发送一位数据
 143          void UART_SendData(char dat)
 144          {
 145   1        ES = 0 ;      // 串口工作的时候禁止中断
 146   1        SBUF = dat ;  // 待发送的数据放到SBUF中
 147   1        while(!TI) ;  // 等待发送完毕
 148   1        TI = 0 ;      // 清TI中断
 149   1        ES = 1 ;      // 打开中断
 150   1      }
 151          
 152          //发送字符串
 153          void UART_SendStr(char *str)
 154          {
 155   1          do
 156   1          {
 157   2            UART_SendData(*str);
 158   2          }while(*str ++  != '\0' ); // 一直到字符串结束
 159   1      }
 160          
 161          //温度转化函数，将测得的温度值转化为字符数组存放
 162          void ds1820disp()
 163          {   
 164   1          unsigned char flagdat;
 165   1        
 166   1          if(tflag==0)
 167   1            flagdat=0x2b;//正温度显示符号
 168   1          else
 169   1            flagdat=0x2d;//负温度显示负号:-
 170   1          
 171   1          disdata[1]=tvalue/1000+0x30;//百位数
 172   1          disdata[2]=tvalue%1000/100+0x30;//十位数
 173   1          disdata[3]=tvalue%100/10+0x30;//个位数
 174   1          disdata[4]= 0x2E ;//小数点
 175   1          disdata[5]=tvalue%10/1+0x30;//小数位
 176   1      
 177   1          if(disdata[1]==0x30) // 如果百位为0
 178   1          {
C51 COMPILER V9.54   MAIN1                                                                 12/02/2021 15:12:05 PAGE 4   

 179   2            disdata[0]= 0x20; // 第一位不显示
 180   2            disdata[1]= flagdat; // 百位显示符号
 181   2            if(disdata[2]==0x30) //如果百位为0，十位为0
 182   2            {
 183   3              disdata[1]=0x20; // 百位不显示符号
 184   3              disdata[2]=flagdat; // 10位显示符号
 185   3            }
 186   2          }
 187   1      }
 188          
 189          
 190          //转换阈值
 191          void change()
 192          {
 193   1        chg[0] = wrong / 10 + 0x30;
 194   1        chg[1] = wrong % 10 + 0x30;
 195   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    550    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
